## Apply settings from the environment at boot time via envsubst.

## A rate limit request returns status 429.
limit_req_status 429;

## Determine if this is a bot request via the user-agent string.
map $http_user_agent $isbot_ua {
        default                0;
        ~*pingdom              0;
        ~*(bot|crawler|spider) 1;
        ""                     1;
        "-"                    1;
}

## Set a limit zone based on the bot status.
map $isbot_ua $limit_bot {
        0       "";
        1       $binary_remote_addr;
}

## Apply the rate limits.
limit_req_zone $limit_bot zone=bots:10m rate=${NGINX_LIMIT_BOTS};
limit_req_zone $binary_remote_addr zone=humans:10m rate=${NGINX_LIMIT_HUMANS};

## Apply the burst limits.
limit_req zone=bots burst=${NGINX_BURST_BOTS};
limit_req zone=humans burst=${NGINX_BURST_HUMANS};

## Define a map of URL patters that are considered expensive and
## should be limited very hard.
## See https://humanitarian.atlassian.net/browse/OPS-10013
map $request_uri $binary_remote_addr_map {
        default                 "";
        ~*/en/page/print/pdf    $binary_remote_addr;
        ~*/en/section/print/pdf $binary_remote_addr;
}

## Define custom zone for expensive requests for GMS and allow only
## three requests per minute and no bursts or delayed response.
limit_req_zone $binary_remote_addr_map zone=pdf:10m rate=3r/m;
limit_req zone=pdf nodelay;
